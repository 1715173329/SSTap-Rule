name: Update China IP list and generate BypassCN.rule

on:  
  workflow_dispatch:

  schedule: 
    - cron:  '0 2 */3 * *'

jobs:
  build:
    name: Generate BypassCN.rule
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into directory
      uses: actions/checkout@v4
    
    - name: Run the updategeoip-cn.sh
      run: |
        echo "#BypassCNandLan,绕过大陆和局域网,1,1,1,0,0,0," >> BypassCNandLan.rules

        curl https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/CN-ip-cidr.txt >> BypassCNandLan.rules

        sed -i '2{/^$/d;}' BypassCNandLan.rules # 删除源文件内第二行的空行
        echo 10.0.0.0/8 >> BypassCNandLan.rules
        echo 172.16.0.0/12 >> BypassCNandLan.rules
        echo 192.168.0.0/16 >> BypassCNandLan.rules
      shell: bash

    - name: Git Add BypassCNandLan.rules
      run: |
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git fetch
        cp ./BypassCNandLan.rules ./rules/BypassCNandLan.rules
        git add ./rules/BypassCNandLan.rules
        if ! git commit -am "Updated at $(date)"; then
          curl -o BypassCNandLan.rules -L https://github.com/FQrabbit/SSTap-Rule/raw/master/rules/BypassCNandLan.rules         
          hash1=$(sha256sum "./BypassCNandLan.rules" | awk '{print $1}')
          hash2=$(sha256sum "./rules/BypassCNandLan.rules" | awk '{print $1}')
          echo -e "hash1=$hash1\nhash2=$hash2"
          if [ "$hash1" == "$hash2" ]; then
            echo "Hashes match. The files are identical."
            echo "Upstream not updated"
            echo "status=1" >> $GITHUB_ENV
            exit 0
          else
            echo "Hashes do not match. The files are different."
            echo "ERROR! Upstream updated! There's something went WRONG!"
            echo "status=1" >> $GITHUB_ENV
            exit 1
          fi
        fi
        echo "status=0" >> $GITHUB_ENV

            
    - name: GitHub Push
      uses: ad-m/github-push-action@v0.6.0
      if: ${{ env.upstream_status }} == '0'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: master
        force: true
